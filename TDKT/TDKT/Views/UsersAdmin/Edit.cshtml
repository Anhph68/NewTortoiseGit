@model TDKT.Models.EditUserViewModel

@using (Ajax.BeginForm("Edit", null, FormMethod.Post,
        new AjaxOptions
        {
            OnSuccess = "loadSuccess",

        },
        new { @id = "MyForm" }
    ))
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title">Thay đổi thông tin người sử dụng</h4>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(c=>c.Id)
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.FullName)
                                @Html.TextBoxFor(c => c.FullName, new { @class = "form-control input-sm", @placeholder = "Họ và tên" })
                                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.Username)
                                @Html.HiddenFor(c => c.Username)
                                @Html.TextBoxFor(c => c.Username, new { @class = "form-control input-sm", @placeholder = "Tên đăng nhập", @disabled = true})
                                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.Email)
                                @Html.TextBoxFor(c => c.Email, new { @class = "form-control input-sm", @placeholder = "Email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.PhoneNumber)
                                @Html.TextBoxFor(c => c.PhoneNumber, new { @class = "form-control input-sm", @placeholder = "Số điện thoại" })
                            </div>
                            <div class="form-group">
                                <label>Chọn quyền</label>
                                <div class="row col-sm-12">
                                    @foreach (var item in Model.RolesList)
                                    {
                                        <div class="col-sm-12 form-group">
                                            <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />@item.Value
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(c => c.MaDonVi)
                                @Html.DropDownListFor(c => c.MaDonVi, (SelectList)ViewBag.Donvi, " -- Chọn đơn vị công tác -- ", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.MaDonVi, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.ChucVu)
                                @Html.TextBoxFor(c => c.ChucVu, new { @class = "form-control input-sm", @placeholder = "Chức vụ" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.MaKTV)
                                @Html.TextBoxFor(c => c.MaKTV, new { @class = "form-control input-sm", @placeholder = "Mã thẻ kiểm toán viên" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(c => c.GhiChu)
                                @Html.TextAreaFor(c => c.GhiChu, new { @rows = 7, @class = "form-control input-sm", @placeholder = "Ghi chú" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-primary" id="btn-ok">
                        <span class="bootstrap-dialog-button-icon glyphicon glyphicon-check"></span>
                        Lưu thông tin
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <span class="bootstrap-dialog-button-icon glyphicon glyphicon-log-out"></span>
                        Bỏ qua
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $.validator.unobtrusive.parse(document);

        $.each($('div.date'), function (i) {
            var $this = $(this).datepicker(option);
            $this.on("changeDate", function () {
                $('.date').slice(i - 1, i).datepicker("setEndDate", $this.datepicker("getDate"));
                $('.date').slice(i + 1, i + 2).datepicker("setStartDate", $this.datepicker("getDate"));
            });
        });

        $('#myModal').modal('show');

        //After closing the window, remove the content of the window
        $('#myModal').on('hidden.bs.modal', function (e) {
            $('#MyForm').remove();
        })

    </script>
}

@*@model TDKT.Models.EditUserViewModel

    @{
        ViewBag.Title = "Edit";
    }

    <h2>Edit.</h2>


    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Edit User Form.</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Roles", new { @class = "control-label col-md-2" })
                <span class=" col-md-10">
                    @foreach (var item in Model.RolesList)
                    {
                        <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                        @Html.Label(item.Value, new { @class = "control-label" })
                    }
                </span>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
