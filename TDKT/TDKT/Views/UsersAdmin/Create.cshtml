@model TDKT.Models.RegisterViewModel

@using (Ajax.BeginForm("Create", null, FormMethod.Post,
    new AjaxOptions
    {
        OnSuccess = "loadSuccess",

    },
    new { @id = "MyForm" }
))
{
    <div class="modal modal-wide fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title">Thêm mới cuộc kiểm toán</h4>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="form-group col-xs-12">
                            @Html.LabelFor(c=>c.FullName)
                            @Html.TextBoxFor(c => c.FullName, new { @class = "form-control input-sm", @placeholder = "Họ và tên" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-6">
                            @Html.LabelFor(c => c.Username)
                            @Html.TextBoxFor(c => c.Username, new { @class = "form-control input-sm", @placeholder = "Tên đăng nhập" })
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group col-sm-2 col-xs-6">
        <label>Niên độ</label>
        @Html.TextBoxFor(c => c.NIEN_DO, new { @class = "form-control input-sm", @placeholder = "Niên độ kiểm toán" })
    </div>
    <div class="form-group col-sm-4 col-xs-12">
        <label>Đơn vị thực hiện</label>
        @Html.DropDownListFor(c => c.MA_DVKT, (SelectList)ViewBag.Donvi, " -- Chọn đơn vị thực hiện kiểm toán -- ", new { @class = "form-control input-sm" })

    </div>*@
                    </div>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-primary" id="btn-ok">
                        <span class="bootstrap-dialog-button-icon glyphicon glyphicon-check"></span>
                        Lưu thông tin
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <span class="bootstrap-dialog-button-icon glyphicon glyphicon-log-out"></span>
                        Bỏ qua
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        $.validator.unobtrusive.parse(document);

        $.each($('div.date'), function (i) {
            var $this = $(this).datepicker(option);
            $this.on("changeDate", function () {
                $('.date').slice(i - 1, i).datepicker("setEndDate", $this.datepicker("getDate"));
                $('.date').slice(i + 1, i + 2).datepicker("setStartDate", $this.datepicker("getDate"));
            });
        });

        $('#myModal').modal('show');

        //After closing the window, remove the content of the window
        $('#myModal').on('hidden.bs.modal', function (e) {
            $('#MyForm').remove();
        })

    </script>
}

@*<div class="row">
    <h2>Danh sách người sử dụng</h2>
</div>

@using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">
            Select User Role
        </label>
        <div class="col-md-10">
            @Html.DropDownListFor(m => m., new List<SelectListItem> { new SelectListItem { Text = "Xuất bản", Value = "true" }, new SelectListItem { Text = "Không xuất bản", Value = "false" } }, " -- Chọn trạng thái -- ", new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(c => c.Publish, "", new { @class = "text-danger" })
            @foreach (var item in (SelectList)ViewBag.RoleId)
            {
                <input type="checkbox" name="SelectedRoles" value="@item.Value" class="checkbox-inline" />
                @Html.Label(item.Value, new { @class = "control-label" })
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
